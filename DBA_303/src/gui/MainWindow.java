/*
 * @file
 * @author
 * @version
 */
package gui;

import agent.Sensor;
import components.Action;
import components.Map;
import components.Position;
import java.awt.GridLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author JorgeBG
 */
public class MainWindow extends javax.swing.JFrame {

    Map map;
    List<List<JPanel>> mainMapTilePanelArr;
    int MapTileWidth;
    
    
    /**
     * Creates new form MainWindow with a Map as argument
     */
    public MainWindow(Map map) {
        initComponents();
        
        // set the internal map
        this.map = map;
        
        // init the main map tile array
        int rows = this.map.getNumRows();
        int cols = this.map.getNumCols();
        
        // calculate the tile dimension to be used to draw the agent
        this.MapTileWidth = (int)(this.mainMap.getWidth()/cols);
        
        // creates the tile array for be used to draw the agent path and draw
        createMapView();
               
        updateAgent();
        
        this.mainMap.updateUI();
        
    }

    private void createMapView(){
        int rows = this.map.getNumRows();
        int cols = this.map.getNumCols();
        
        // initialize the array
        GridLayout gridLayout = new GridLayout(this.map.getNumRows(), this.map.getNumCols(),1,1);
        this.mainMap.setLayout(gridLayout);
        this.mainMapTilePanelArr = new ArrayList<>();
        for(int i = 0; i< rows; i++){
            this.mainMapTilePanelArr.add(new ArrayList<>());
            for(int j=0; j<cols; j++){
                JPanel p = AssetManager.getPreviewTilePanel(map.getTile(i, j));
                this.mainMapTilePanelArr.get(i).add( p );
                this.mainMap.add(p);
            }
        }

        this.mainMap.updateUI();
    }
    
    public void updateAgent(){
        clearAgentPath();
        
        ArrayList<Position> path = Sensor.getInstance().getAgentVisitedPath();
        
        for(int i=0; i<path.size()-1; i++){
            Position p = path.get(i);
            JPanel panel = this.mainMapTilePanelArr.get(p.getY()).get(p.getX());
            panel.add(new JLabel (AssetManager.getAgentPastIcon(this.MapTileWidth)));
        }
        Position last = path.get(path.size()-1);
        JPanel lastPanel = this.mainMapTilePanelArr.get(last.getY()).get(last.getX());
        lastPanel.add(new JLabel(AssetManager.getAgentCurrentIcon(this.MapTileWidth)));
        
        this.mainMap.updateUI();
        
    }
    
    private void clearAgentPath(){
        for(List<JPanel> row : this.mainMapTilePanelArr)
            for(JPanel p: row)
                p.removeAll();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainMap = new javax.swing.JPanel();
        agentMentalMap = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        logTextArea = new javax.swing.JTextArea();
        closeBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(850, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(850, 600));

        mainMap.setPreferredSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout mainMapLayout = new javax.swing.GroupLayout(mainMap);
        mainMap.setLayout(mainMapLayout);
        mainMapLayout.setHorizontalGroup(
            mainMapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        mainMapLayout.setVerticalGroup(
            mainMapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        agentMentalMap.setBackground(new java.awt.Color(204, 204, 0));
        agentMentalMap.setPreferredSize(new java.awt.Dimension(250, 250));

        javax.swing.GroupLayout agentMentalMapLayout = new javax.swing.GroupLayout(agentMentalMap);
        agentMentalMap.setLayout(agentMentalMapLayout);
        agentMentalMapLayout.setHorizontalGroup(
            agentMentalMapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        agentMentalMapLayout.setVerticalGroup(
            agentMentalMapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        logTextArea.setEditable(false);
        logTextArea.setColumns(20);
        logTextArea.setRows(5);
        jScrollPane1.setViewportView(logTextArea);

        closeBtn.setText("Cerrar");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        backBtn.setText("Atr√°s");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(mainMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(agentMentalMap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backBtn)
                        .addGap(18, 18, 18)
                        .addComponent(closeBtn)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(agentMentalMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(mainMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeBtn)
                    .addComponent(backBtn))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_closeBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        // TODO - detele 
        Map myMap = new Map("mapWithDiagonalWall.txt");
        Sensor.getInstance().setParameters( "mapWithDiagonalWall.txt", new Position(0,0), new Position(3,6));
        Sensor.getInstance().setAgentPosition(new Position(0,0));
        Sensor.getInstance().updatePosition(Action.DOWN);
        Sensor.getInstance().updatePosition(Action.DOWN_RIGHT);
        Sensor.getInstance().updatePosition(Action.DOWN_RIGHT);
        Sensor.getInstance().updatePosition(Action.RIGHT);
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow(myMap).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel agentMentalMap;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea logTextArea;
    private javax.swing.JPanel mainMap;
    // End of variables declaration//GEN-END:variables
}
