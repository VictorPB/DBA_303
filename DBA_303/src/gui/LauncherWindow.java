/*
 * @file    LauncherWindow.java
 * @author  JorgeBG
 * @version 2.0 (P3)
 */
package gui;

import java.awt.GridLayout;
import java.io.File;
import java.util.stream.Stream;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import components.Map;
import components.Position;
import components.Tile;
import java.util.ArrayList;
import java.util.List;
import launcher.Launcher;

/**
 * @biref   Class that models the initial (launcher) window for the P3.
 *          Here you select the map to be used in the P3 execution.
 * @author  JorgeBG
 */
public class LauncherWindow extends javax.swing.JFrame {

    static public String mapName;
    static public Map selectedMap;
    static private List<JPanel> panelTileList;
        
    static public Position originPos = new Position(0,0);
    static public Position targetPos = new Position(0,0);
            
    
    /**
     * Creates new form LauncherWindow
     */
    public LauncherWindow() {
        initComponents();
        updateMapList();
        initializeListeners();
    }

    /**
     * Function that reads all files into the map folder and fills the launcher
     * menu
     */
    private void updateMapList(){
        String path = new File("maps/").getAbsolutePath();
        // Specific filter added for P3
        String [] mapList = Stream.of(new File(path).listFiles())
            .filter(file -> !file.isDirectory())
            .filter(file -> file.getName().endsWith(".txt"))
            .filter(file -> file.getName().startsWith("P3"))
            .map(file -> file.getName())
            .toArray(String[]::new);
        
        this.mapSelection_List.setListData(mapList);
    }
    
    
    /**
     * Method to update the Preview map
     */
    private void updateMapPreview(){
        // first clean the panel
        this.mapPreview.removeAll();
        // array to retrieve the tile by row and col
        panelTileList = new ArrayList<JPanel>();
        
        // Open the new map
        selectedMap = new Map(LauncherWindow.mapName);
        int rows = selectedMap.getNumRows();
        int cols = selectedMap.getNumCols();

        // Create the grid and assign to the mapPreview Panel
        GridLayout gridLayout = new GridLayout(rows, cols,1,1);
        this.mapPreview.setLayout(gridLayout);
        for(int i=0; i<rows; i++){
            for(int j=0; j<cols; j++){
                Tile tile = selectedMap.getTile(i,j);
                // add the tile to the panel
                JPanel panelTile = AssetManager.getTilePanel(tile.getType());
                panelTileList.add(panelTile);
                this.mapPreview.add(panelTile);
            }
        }
        
        this.mapPreview.updateUI();
    }


    
    /**
     * Method to initialize all listener for the gui usability
     */
    private void initializeListeners(){
        // Add listener to the map list
        this.mapSelection_List.addListSelectionListener((ListSelectionEvent e) -> {
            if( !e.getValueIsAdjusting()){
                LauncherWindow.mapName = mapSelection_List.getSelectedValue();
                updateMapPreview();
                if(valid())
                    this.acceptButton.setEnabled(true);
            }
        });
        
        this.acceptButton.addActionListener((e) -> Launcher.runP3());
    }

    /**
     * Private function to check conditions to allow to open the MainWindow
     * @return 
     */
    private boolean valid(){
        return selectedMap != null;
    }
    
    /**************************************************************************/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DBATitle_Label = new java.awt.Label();
        mapSelection_Frame = new javax.swing.JPanel();
        mapPreview = new javax.swing.JPanel();
        mapSelection_Scroll = new javax.swing.JScrollPane();
        mapSelection_List = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        acceptButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DBA 2023/24 - P3 - Grupo 303");
        setResizable(false);

        DBATitle_Label.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        DBATitle_Label.setForeground(new java.awt.Color(51, 51, 51));
        DBATitle_Label.setText("Pantalla de Carga - DBA");

        mapSelection_Frame.setBackground(new java.awt.Color(102, 102, 102));
        mapSelection_Frame.setPreferredSize(new java.awt.Dimension(500, 220));

        mapPreview.setBackground(new java.awt.Color(204, 204, 204));
        mapPreview.setPreferredSize(new java.awt.Dimension(200, 200));

        javax.swing.GroupLayout mapPreviewLayout = new javax.swing.GroupLayout(mapPreview);
        mapPreview.setLayout(mapPreviewLayout);
        mapPreviewLayout.setHorizontalGroup(
            mapPreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        mapPreviewLayout.setVerticalGroup(
            mapPreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        mapSelection_List.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        mapSelection_Scroll.setViewportView(mapSelection_List);

        jLabel1.setText("Selecci√≥n de Mapa:");

        javax.swing.GroupLayout mapSelection_FrameLayout = new javax.swing.GroupLayout(mapSelection_Frame);
        mapSelection_Frame.setLayout(mapSelection_FrameLayout);
        mapSelection_FrameLayout.setHorizontalGroup(
            mapSelection_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mapSelection_FrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mapSelection_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mapSelection_FrameLayout.createSequentialGroup()
                        .addComponent(mapSelection_Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mapPreview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84))
                    .addGroup(mapSelection_FrameLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        mapSelection_FrameLayout.setVerticalGroup(
            mapSelection_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mapSelection_FrameLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mapSelection_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mapSelection_Scroll)
                    .addComponent(mapPreview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        acceptButton.setText("Iniciar");
        acceptButton.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(acceptButton)
                    .addComponent(DBATitle_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mapSelection_Frame, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DBATitle_Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(mapSelection_Frame, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(acceptButton)
                .addContainerGap())
        );

        DBATitle_Label.getAccessibleContext().setAccessibleName("launcherTitle");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LauncherWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LauncherWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LauncherWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LauncherWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new LauncherWindow().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label DBATitle_Label;
    private javax.swing.JButton acceptButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel mapPreview;
    private javax.swing.JPanel mapSelection_Frame;
    private javax.swing.JList<String> mapSelection_List;
    private javax.swing.JScrollPane mapSelection_Scroll;
    // End of variables declaration//GEN-END:variables
}
